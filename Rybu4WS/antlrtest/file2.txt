server Bank {
    var balanceA: 0..1 = 1;
    var balanceB: 0..1 = 0;
    { AToB | balanceB > 0 } -> { balanceA -= 1; balanceB +=1; return :ok; }
    { AToB | balanceB == 0 } -> { return :fail; }
    { DecrementB | balanceB > 0 } -> { balanceB -= 1; return :ok; }
    { DecrementB | balanceB == 0 } -> { return :fail; }
    { IncrementB } -> { balanceB += 1; return :ok; }
}

server Atm {
    var state: { None, Withdrawing, NotEnoughMoney, NoBanknotes, Done } = :None;
    { WithdrawB | state == :None } -> {
        match Bank.DecrementB() {
            :ok -> { state = :Withdrawing; return :ok; }
        }
    }
}

server BankingApp {
    { TransferAToB } -> { 
        Bank.AToB();
        return :ok;
    }
}

process First {
    Atm.WithdrawB();
}

process Second {
    BankingApp.TransferAToB();
}